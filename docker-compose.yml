version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: subsplit
      POSTGRES_USER: subsplit
      POSTGRES_PASSWORD: subsplit_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U subsplit"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Subsplit Backend
  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://subsplit:subsplit_password@postgres:5432/subsplit
      REDIS_URL: redis://redis:6379
      DEBUG: "true"
      SECRET_KEY: development-secret-key-change-in-production
      ALLOWED_HOSTS: '["http://localhost:3000", "http://localhost:5173"]'
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Starting server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Subsplit Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    environment:
      VITE_API_URL: http://localhost:8000/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
